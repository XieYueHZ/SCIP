(load "..\\00.scm")
(define (square-tree1 tree)
        (map (lambda (sub-tree)
                     (if (pair? sub-tree)
                         (square-tree1 sub-tree)
                         (square sub-tree)))
              tree))

(define (square-tree2 tree)
        (cond ((null? tree) tree)
              ((not (pair? tree)) (square tree))
              (else (cons (square-tree2 (car tree))
                          (square-tree2 (cdr tree))))))

(define t (list 1
                (list 2 (list 3 4) 5)
                (list 6 7)))
(display (square-tree1 t))
(newline)
(display (square-tree2 t))
(exit)