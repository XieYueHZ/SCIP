(define (cons a b)
        (* (expt 2 a) (expt 3 b)))

; (define (car n)
;         (define (mod3 x)
;                 (if (= (mod x 3) 0)
;                     (mod3 (/ x 3))
;                     x))
;         (log (mod3 n) 2))


; (define (cdr n)
;         (define (mod2 x)
;                 (if (= (mod x 2) 0)
;                     (mod2 (/ x 2))
;                     x))
;         (log (mod2 n) 3))

(define (get-num n a b)
        (define (iter r)
                (if (= (mod r b) 0)
                    (iter (/ r b))
                    r))
        (log (iter n) a))

(define (car n)
        (get-num n 2 3))
(define (cdr n)
        (get-num n 3 2))
(define t (cons 2 3))
(display t)
(newline)
(display (car t))
(newline)
(display (cdr t))
(exit)